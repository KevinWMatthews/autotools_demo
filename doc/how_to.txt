To clean all files generated by autotools, you can run
# git clean -fdX        # Force, remove directories, remove only untracked files
to remove all untracked files and directories. This works if your .gitignore file is set just right.

Run:
# autoscan
to help you create and maintain your configure.ac.
It checks for common problems and logs them in two files:
    autoscan.log
    configure.scan
In fact, you can use configure.scan as a basis for your configure.ac file.

See:
    https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/autoscan-Invocation.html

To execute Autoconf, run:
# autoreconf -iv            # --install --verbose
It is important to use the --install flag; this will install programs that are needed.
The --install flag is passed on to Automake, too.
TODO I think we can run:
# cd build
# autoreconf -iv ..
but I'm concerned that Automake will fail.


It is possible to run autoconf, but this won't properly invoke automake and libtool.
To have autoconf run other autotools in verbose mode, run
# autoreconf -vv
The output is very verbose.


Is your project configured for automake?
If so, autoconf will run automake, which install the script install.sh.
If not, automake will not be called and install.sh will not be created.
This will cause the configure script to fail.
You will also need to run:
# automake --add-missing --copy
You can ignore the automake error; we aren't configured for automake....

Generate Makefiles from their template .in files, using an out-of-tree/VPATH build:
# cd build
# ../configure
